import numpy as np
import math
import matplotlib.pyplot as plt

def Average(tau, val):
    sum=0
    for i in val:
        sum += i
    res = sum/tau
    return res


def SumAverage_Scope(tau, val):
    sum=0
    ave = Average(tau, val)
    min=val[1]-ave
    max=val[1]-ave
    for i in val:
        sum += i - ave
        if sum<min: min = sum
        if sum>max: max = sum
    CKO(tau, sum)
    return max-min


def CKO(tau, sumaverage):
    return np.power(np.power(sumaverage, 2)/(tau - 1), 0.5)

# Метод наименьших квадратов
def LS(x, y):
    t=len(x)
    medXY=0
    medX=sum([math.log(c) for c in x])
    medY=sum([math.log(c) for c in y])
    medXX=sum([np.power(math.log(c), 2) for c in x])
    for i in range(len(x)): medXY+=math.log(x[i])*math.log(y[i])
    b=(t*medXY-medX*medY)/(t*medXX-np.power(medX, 2))
    a=math.exp((medY-b*medX)/t)
    return [a, b]


def LinearFx(x):
    return a+b*x 


y=[1.216222e+03,
 1.112572e+03,
 1.029153e+03,
 1.035437e+03,
 1.000190e+03,
 8.970836e+02,
 9.094112e+02,
 8.723549e+02,
 8.185649e+02,
 8.575817e+02,
 9.127482e+02,
 9.662993e+02,
 9.302911e+02,
 8.769923e+02,
 8.304657e+02,
 8.273308e+02,
 8.030007e+02,
 7.558131e+02,
 7.054113e+02,
 6.484178e+02,
 6.802741e+02,
 5.693938e+02,
 5.364173e+02,
 5.128949e+02,
 5.702781e+02,
 6.260125e+02,
 6.838141e+02,
 7.506528e+02,
 7.359527e+02,
 6.495867e+02,
 6.493465e+02,
 5.782701e+02,
 6.472695e+02,
 6.218967e+02,
 6.105190e+02,
 6.663223e+02,
 6.657011e+02,
 7.270934e+02,
 6.880956e+02,
 7.072688e+02,
 6.461905e+02,
 6.663747e+02,
 5.906286e+02,
 5.390724e+02,
 5.362290e+02,
 5.019325e+02,
 5.385722e+02,
 4.968968e+02,
 5.255799e+02,
 5.170468e+02,
 6.062978e+02,
 6.851604e+02,
 7.038852e+02,
 6.554121e+02,
 6.029930e+02,
 6.473496e+02,
 7.461082e+02,
 7.383863e+02,
 7.243956e+02,
 7.737064e+02,
 7.236675e+02,
 7.087834e+02,
 7.112165e+02,
 7.346187e+02,
 7.547224e+02,
 8.260394e+02,
 8.679384e+02,
 9.042809e+02,
 8.582887e+02,
 8.078700e+02,
 8.665953e+02,
 8.557793e+02,
 9.149125e+02,
 1.022764e+03,
 1.049229e+03,
 1.143636e+03,
 1.184715e+03,
 1.129950e+03,
 1.203951e+03,
 1.261466e+03,
 1.159150e+03,
 1.101138e+03,
 1.085992e+03,
 1.074615e+03,
 1.040914e+03,
 1.014041e+03,
 9.372344e+02,
 9.358602e+02,
 1.033559e+03,
 9.963456e+02,
 1.068596e+03,
 1.023127e+03,
 1.029968e+03,
 1.167522e+03,
 1.200303e+03,
 1.246945e+03,
 1.223013e+03,
 1.170346e+03,
 1.217213e+03,
 1.174524e+03,
 1.245103e+03,
 1.165373e+03,
 1.148477e+03,
 1.186040e+03,
 1.137240e+03,
 1.083616e+03,
 1.087408e+03,
 1.074762e+03,
 1.116692e+03,
 1.152706e+03,
 1.130489e+03,
 1.132617e+03,
 1.087701e+03,
 1.137866e+03,
 1.083492e+03,
 1.065002e+03,
 1.127591e+03,
 1.191594e+03,
 1.168188e+03,
 1.148659e+03,
 1.204045e+03,
 1.143257e+03,
 1.208305e+03,
 1.275027e+03,
 1.212272e+03,
 1.198952e+03,
 1.078753e+03,
 1.012486e+03,
 1.069809e+03,
 1.221468e+03,
 1.179650e+03,
 1.177033e+03,
 1.206083e+03,
 1.249095e+03,
 1.182463e+03,
 1.088228e+03,
 1.127677e+03,
 1.136452e+03,
 1.145276e+03,
 1.197852e+03,
 1.126522e+03,
 1.215595e+03,
 1.258340e+03,
 1.267336e+03,
 1.257815e+03,
 1.236795e+03,
 1.207922e+03,
 1.148132e+03,
 1.230143e+03,
 1.218971e+03,
 1.217065e+03,
 1.165434e+03,
 1.179498e+03,
 1.104349e+03,
 1.123499e+03,
 1.135576e+03,
 1.169277e+03,
 1.101432e+03,
 1.042526e+03,
 1.105312e+03,
 1.007765e+03,
 1.057917e+03,
 1.081826e+03,
 1.126065e+03,
 1.146129e+03,
 1.128625e+03,
 1.074813e+03,
 9.877342e+02,
 1.035605e+03,
 1.083876e+03,
 1.162695e+03,
 1.168624e+03,
 1.120946e+03,
 1.077058e+03,
 1.086942e+03,
 1.110605e+03,
 1.077564e+03,
 1.012578e+03,
 1.041752e+03,
 1.078820e+03,
 1.014595e+03,
 1.092214e+03,
 1.028699e+03,
 9.285103e+02,
 9.736247e+02,
 9.549687e+02,
 1.008816e+03,
 9.479287e+02,
 9.664620e+02,
 1.032876e+03,
 9.906316e+02,
 9.804866e+02]
tau0=2
delta_tau=2
x=[i+1 for i in range(len(y))]
a=LS(x, y)[0]
b=LS(x, y)[1]
plt.scatter(x, y, c="red")
ln=[LinearFx(c) for c in x]
plt.plot(x, ln)
plt.plot()
    # test value LS([0.1, 0.2, -0.1, 0.5, 0.002], [0, 1, 2, 3, 4 ])
# test value from site mathhelp planet x=[2.5, 3,3.3,4,4.4,5,5.5,6,6.5,7,7.5,8,8.5] y=[4.4,3.6,3,2.7,2.1,1.8,1.9,1.5,1.4,1.3,1.2,1.1,1.1]
